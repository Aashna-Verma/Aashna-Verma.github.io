{"ast":null,"code":"export function getSize(scrollbar) {\n  var containerEl = scrollbar.containerEl,\n    contentEl = scrollbar.contentEl;\n  var containerStyles = getComputedStyle(containerEl);\n  var paddings = ['paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight'].map(function (prop) {\n    return containerStyles[prop] ? parseFloat(containerStyles[prop]) : 0;\n  });\n  var verticalPadding = paddings[0] + paddings[1];\n  var horizontalPadding = paddings[2] + paddings[3];\n  return {\n    container: {\n      // requires `overflow: hidden`\n      width: containerEl.clientWidth,\n      height: containerEl.clientHeight\n    },\n    content: {\n      // border width and paddings should be included\n      width: contentEl.offsetWidth - contentEl.clientWidth + contentEl.scrollWidth + horizontalPadding,\n      height: contentEl.offsetHeight - contentEl.clientHeight + contentEl.scrollHeight + verticalPadding\n    }\n  };\n}","map":{"version":3,"names":["getSize","scrollbar","containerEl","contentEl","containerStyles","getComputedStyle","paddings","map","prop","parseFloat","verticalPadding","horizontalPadding","container","width","clientWidth","height","clientHeight","content","offsetWidth","scrollWidth","offsetHeight","scrollHeight"],"sources":["C:\\Users\\aashn\\OneDrive\\Documents\\Aashna\\3_PROJECTS\\programming\\personal-website\\node_modules\\smooth-scrollbar\\src\\geometry\\get-size.ts"],"sourcesContent":["import * as I from '../interfaces/';\n\nexport function getSize(scrollbar: I.Scrollbar): I.ScrollbarSize {\n  const {\n    containerEl,\n    contentEl,\n  } = scrollbar;\n\n  const containerStyles = getComputedStyle(containerEl);\n  const paddings = [\n    'paddingTop',\n    'paddingBottom',\n    'paddingLeft',\n    'paddingRight',\n  ].map(prop => {\n    return containerStyles[prop] ? parseFloat(containerStyles[prop]) : 0;\n  });\n  const verticalPadding = paddings[0] + paddings[1];\n  const horizontalPadding = paddings[2] + paddings[3];\n\n  return {\n    container: {\n      // requires `overflow: hidden`\n      width: containerEl.clientWidth,\n      height: containerEl.clientHeight,\n    },\n    content: {\n      // border width and paddings should be included\n      width: contentEl.offsetWidth - contentEl.clientWidth + contentEl.scrollWidth + horizontalPadding,\n      height: contentEl.offsetHeight - contentEl.clientHeight + contentEl.scrollHeight + verticalPadding,\n    },\n  };\n}\n"],"mappings":"AAEA,OAAM,SAAUA,OAAOA,CAACC,SAAsB;EAE1C,IAAAC,WAAA,GAAAD,SAAA,CAAAC,WAAW;IACXC,SAAA,GAAAF,SAAA,CAAAE,SAAS;EAGX,IAAMC,eAAe,GAAGC,gBAAgB,CAACH,WAAW,CAAC;EACrD,IAAMI,QAAQ,GAAG,CACf,YAAY,EACZ,eAAe,EACf,aAAa,EACb,cAAc,CACf,CAACC,GAAG,CAAC,UAAAC,IAAI;IACR,OAAOJ,eAAe,CAACI,IAAI,CAAC,GAAGC,UAAU,CAACL,eAAe,CAACI,IAAI,CAAC,CAAC,GAAG,CAAC;EACtE,CAAC,CAAC;EACF,IAAME,eAAe,GAAGJ,QAAQ,CAAC,CAAC,CAAC,GAAGA,QAAQ,CAAC,CAAC,CAAC;EACjD,IAAMK,iBAAiB,GAAGL,QAAQ,CAAC,CAAC,CAAC,GAAGA,QAAQ,CAAC,CAAC,CAAC;EAEnD,OAAO;IACLM,SAAS,EAAE;MACT;MACAC,KAAK,EAAEX,WAAW,CAACY,WAAW;MAC9BC,MAAM,EAAEb,WAAW,CAACc;KACrB;IACDC,OAAO,EAAE;MACP;MACAJ,KAAK,EAAEV,SAAS,CAACe,WAAW,GAAGf,SAAS,CAACW,WAAW,GAAGX,SAAS,CAACgB,WAAW,GAAGR,iBAAiB;MAChGI,MAAM,EAAEZ,SAAS,CAACiB,YAAY,GAAGjB,SAAS,CAACa,YAAY,GAAGb,SAAS,CAACkB,YAAY,GAAGX;;GAEtF;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}