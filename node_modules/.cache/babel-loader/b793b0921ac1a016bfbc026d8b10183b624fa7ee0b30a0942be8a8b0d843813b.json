{"ast":null,"code":"import { eventScope, TouchRecord } from '../utils/';\nvar activeScrollbar;\nexport function touchHandler(scrollbar) {\n  var target = scrollbar.options.delegateTo || scrollbar.containerEl;\n  var touchRecord = new TouchRecord();\n  var addEvent = eventScope(scrollbar);\n  var damping;\n  var pointerCount = 0;\n  addEvent(target, 'touchstart', function (evt) {\n    // start records\n    touchRecord.track(evt);\n    // stop scrolling\n    scrollbar.setMomentum(0, 0);\n    // save damping\n    if (pointerCount === 0) {\n      damping = scrollbar.options.damping;\n      scrollbar.options.damping = Math.max(damping, 0.5); // less frames on touchmove\n    }\n    pointerCount++;\n  });\n  addEvent(target, 'touchmove', function (evt) {\n    if (activeScrollbar && activeScrollbar !== scrollbar) return;\n    touchRecord.update(evt);\n    var _a = touchRecord.getDelta(),\n      x = _a.x,\n      y = _a.y;\n    scrollbar.addTransformableMomentum(x, y, evt, function (willScroll) {\n      if (willScroll && evt.cancelable) {\n        evt.preventDefault();\n        activeScrollbar = scrollbar;\n      }\n    });\n  });\n  addEvent(target, 'touchcancel touchend', function (evt) {\n    var delta = touchRecord.getEasingDistance(damping);\n    scrollbar.addTransformableMomentum(delta.x, delta.y, evt);\n    pointerCount--;\n    // restore damping\n    if (pointerCount === 0) {\n      scrollbar.options.damping = damping;\n    }\n    touchRecord.release(evt);\n    activeScrollbar = null;\n  });\n}","map":{"version":3,"names":["eventScope","TouchRecord","activeScrollbar","touchHandler","scrollbar","target","options","delegateTo","containerEl","touchRecord","addEvent","damping","pointerCount","evt","track","setMomentum","Math","max","update","_a","getDelta","x","y","addTransformableMomentum","willScroll","cancelable","preventDefault","delta","getEasingDistance","release"],"sources":["C:\\Users\\aashn\\OneDrive\\Documents\\Aashna\\3_PROJECTS\\programming\\personal-website\\node_modules\\smooth-scrollbar\\src\\events\\touch.ts"],"sourcesContent":["import * as I from '../interfaces/';\n\nimport {\n  eventScope,\n  TouchRecord,\n} from '../utils/';\n\nlet activeScrollbar: I.Scrollbar | null;\n\nexport function touchHandler(scrollbar: I.Scrollbar) {\n  const target = scrollbar.options.delegateTo || scrollbar.containerEl;\n  const touchRecord = new TouchRecord();\n  const addEvent = eventScope(scrollbar);\n\n  let damping: number;\n  let pointerCount = 0;\n\n  addEvent(target, 'touchstart', (evt: TouchEvent) => {\n    // start records\n    touchRecord.track(evt);\n\n    // stop scrolling\n    scrollbar.setMomentum(0, 0);\n\n    // save damping\n    if (pointerCount === 0) {\n      damping = scrollbar.options.damping;\n      scrollbar.options.damping = Math.max(damping, 0.5); // less frames on touchmove\n    }\n\n    pointerCount++;\n  });\n\n  addEvent(target, 'touchmove', (evt: TouchEvent) => {\n    if (activeScrollbar && activeScrollbar !== scrollbar) return;\n\n    touchRecord.update(evt);\n\n    const { x, y } = touchRecord.getDelta();\n\n    scrollbar.addTransformableMomentum(x, y, evt, (willScroll) => {\n      if (willScroll && evt.cancelable) {\n        evt.preventDefault();\n        activeScrollbar = scrollbar;\n      }\n    });\n  });\n\n  addEvent(target, 'touchcancel touchend', (evt: TouchEvent) => {\n    const delta = touchRecord.getEasingDistance(damping);\n\n    scrollbar.addTransformableMomentum(\n      delta.x,\n      delta.y,\n      evt,\n    );\n\n    pointerCount--;\n\n    // restore damping\n    if (pointerCount === 0) {\n      scrollbar.options.damping = damping;\n    }\n\n    touchRecord.release(evt);\n    activeScrollbar = null;\n  });\n}\n"],"mappings":"AAEA,SACEA,UAAU,EACVC,WAAW,QACN,WAAW;AAElB,IAAIC,eAAmC;AAEvC,OAAM,SAAUC,YAAYA,CAACC,SAAsB;EACjD,IAAMC,MAAM,GAAGD,SAAS,CAACE,OAAO,CAACC,UAAU,IAAIH,SAAS,CAACI,WAAW;EACpE,IAAMC,WAAW,GAAG,IAAIR,WAAW,EAAE;EACrC,IAAMS,QAAQ,GAAGV,UAAU,CAACI,SAAS,CAAC;EAEtC,IAAIO,OAAe;EACnB,IAAIC,YAAY,GAAG,CAAC;EAEpBF,QAAQ,CAACL,MAAM,EAAE,YAAY,EAAE,UAACQ,GAAe;IAC7C;IACAJ,WAAW,CAACK,KAAK,CAACD,GAAG,CAAC;IAEtB;IACAT,SAAS,CAACW,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC;IAE3B;IACA,IAAIH,YAAY,KAAK,CAAC,EAAE;MACtBD,OAAO,GAAGP,SAAS,CAACE,OAAO,CAACK,OAAO;MACnCP,SAAS,CAACE,OAAO,CAACK,OAAO,GAAGK,IAAI,CAACC,GAAG,CAACN,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;;IAGtDC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEFF,QAAQ,CAACL,MAAM,EAAE,WAAW,EAAE,UAACQ,GAAe;IAC5C,IAAIX,eAAe,IAAIA,eAAe,KAAKE,SAAS,EAAE;IAEtDK,WAAW,CAACS,MAAM,CAACL,GAAG,CAAC;IAEjB,IAAAM,EAAA,GAAAV,WAAA,CAAAW,QAAA,EAAiC;MAA/BC,CAAA,GAAAF,EAAA,CAAAE,CAAC;MAAEC,CAAA,GAAAH,EAAA,CAAAG,CAA4B;IAEvClB,SAAS,CAACmB,wBAAwB,CAACF,CAAC,EAAEC,CAAC,EAAET,GAAG,EAAE,UAACW,UAAU;MACvD,IAAIA,UAAU,IAAIX,GAAG,CAACY,UAAU,EAAE;QAChCZ,GAAG,CAACa,cAAc,EAAE;QACpBxB,eAAe,GAAGE,SAAS;;IAE/B,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFM,QAAQ,CAACL,MAAM,EAAE,sBAAsB,EAAE,UAACQ,GAAe;IACvD,IAAMc,KAAK,GAAGlB,WAAW,CAACmB,iBAAiB,CAACjB,OAAO,CAAC;IAEpDP,SAAS,CAACmB,wBAAwB,CAChCI,KAAK,CAACN,CAAC,EACPM,KAAK,CAACL,CAAC,EACPT,GAAG,CACJ;IAEDD,YAAY,EAAE;IAEd;IACA,IAAIA,YAAY,KAAK,CAAC,EAAE;MACtBR,SAAS,CAACE,OAAO,CAACK,OAAO,GAAGA,OAAO;;IAGrCF,WAAW,CAACoB,OAAO,CAAChB,GAAG,CAAC;IACxBX,eAAe,GAAG,IAAI;EACxB,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}